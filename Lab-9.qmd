---
title: 'Lab 9'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, comment = NA)
```

## Analysis Of Variance (ANOVA)

Before we dive into a new test, let us take a second to look back at the tests we have already covered and remember what those tests allowed us to do, and what the data for those tests looked like:

**Z-Test:**

-   What does it do?

    -   The Z-test allows us to see if the scores from one population differ from another.

-   What does our data look like?

    -   In order perform a Z-test, we need to have large enough sample to work with (N\>30) and we need to know $\mu$ and $\sigma$.

**T-Test**

-   What does it do?
    -   The T-test allows us to compare a sample to :
        -   $\mu$ when it is given, and when $\sigma$ is not. (one sample)
        -   another sample with paired values. (paired-samples)
        -   another sample with uncorrelated values (independent samples)
-   What does our data look like?
    -   In order to perform a T-test, we need to have a sample that we are comparing to either, $\mu$, paired values, or a sample of (hopefully) equal length.

**How is ANOVA different?**

Here is what t-test for independent samples might look like:

```{r}
# Create a control group with an n of 20, mean of 4.5 and sd of 2
control = rnorm(20,4.5,2)

# Create an experimental group with an n of 20, mean of 6.8 and sd of 1
experimental = rnorm(20,6.8,1)

# Combine into a dataframe
t_test_ex <-data.frame(control, experimental)

head(t_test_ex)
```

You will notice that there are two columns, one for `control` and one for `experimental`.

We we have yet to discuss what this experiment *actually* is trying to answer, but, we can tell from looking at the data that whatever `experimental` is---it's mean is higher than `control` and there *could* be a significant difference.

Here is what an ANOVA might look like:

```{r}

# Create a condition vector with 10 entries for control, treatment 1 and 2
Condition = rep(c("Control", "Trt1", "Trt2"), each = 10)

# Create a scores vector with 30 entries, a mean of 18 and standard deviation of 10
Scores = rnorm(30, 18, 10)

anova_example <- data.frame(Condition, Scores)

anova_example
```

As you can see, we still have two columns, but the main difference is that what used to be a condition two separate samples has become one single sample, separated by the various conditions.

Herein lies the main difference between t-tests and ANOVAs: the amount of conditions (independent variables) that can be compared.

t-tests can only compare an independent variable with two conditions/levels, while ANOVAs can compare an independent variable with more than two conditions/levels.

There are several notes to make when dealing with data in the format of an ANOVA.

-   It becomes essential that you understand the differences between an independent variable and a dependent variable.

-   When you are dealing with 3 or more conditions, you need to convert them into factors if they are not already.

-   Factors are a type of ordered data that tell R which subjects are in which condition.

    -   You can check if a vector is a `factor` by running the `is.factor()` function.

We we will go through some examples to see what it looks like when `R` recognizes a vector as a `factor` and when it does not.

The following example shows a vector of conditions. However, R does not know that these are conditions until we tell it that they are factors. If we are unsure if R knows if a vector is a factor, we can test it using `is.factor` :

```{r}
# Create a sample vector 
example <- c("Control","Control","Placebo","Placebo","Drug","Drug")
is.factor(example)
```

Now that we know that R does not consider this vector to be a factor, we can manually tell R to make it a factor.

```{r}
# Create factor vector
factor(example)
```

Now R, will recognize `example` as a factor.

Similar to `lm`, the way we conduct an anova is by using the `aov` function. The syntax for calculating an ANOVA is:

`aov(DV ~ IV)`

::: callout-note
## Note: There are several methods to compute an ANOVA (including lm) and other packages.
:::

```{r}
# Calculate an ANOVA on the above data
# Save to a variable, aov.test.mod
aov.test.mod <- aov(anova_example$Scores ~ anova_example$Condition)

# Calculate summary statistics and report
summary(aov.test.mod)
```

The above calculation would be reported as such:

> We observed no main effect of condition on scores, as evidenced by an analysis of variance, *F(2,27), .39, p = ns.*
